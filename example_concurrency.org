* 순서
  - threading_semaphore 까지는 thread_intro branch.
  - Queue 연습 부터는 master_branch
** threading
   1. download_images()
      for구문의 다운로드 부분을 download_image() 로 따로 빼낸다
   2. download_image() 를 쓰레드로 돌린다
** threading_Lock
   1. download_iamge()
      - 다운로드 받은 전체 용량을 downloaded_bytes 변수에 누적 저장한다
      - downloaded_bytes변수는 class instance 변수로 설정한다.
** threading_semaphore
   1. download_image()가 쓰레드는 url 개수 만큼 돌아가지만 한번에 4개씩만
      다운로드 가능하도록  다운로드 코드 부분에 Semaphore를 건다
   2. with_ context문으로 구현
** Queue 연습 1
   1. download_images와 perform_resize 를 Que를 통해 멀티쓰레드로 돌린다.
   2. 맨 처음 원본으로 돌아간다(Thread 적용이전 버전)
   3. download_images에서 다운완료된 Url을 바로 Queue 에 넣는다
   4. perform_resize 에서 Queue에 목록을 가져와 resize 수행
   5. main loop에서 download_images 와 perform_resize 를 쓰레드로 2개 동시 실행한다.
** Queue 연습 2
   1. Queue 연습1의 download_images를 multithred로 동시에 받아는다
   2. multithred 용 download_thread
      - queue에서 Url을 가져온다
      - que 에 미리 url이 다 차 있으므로 queue가 empty이면 thread를 멈춘다 --> .get(block=False)
      - get(block=False) 에서 Empty가 되면 예외를 발생하므로 Try 구문으로 구현해서 예외를 받아준다.
      - download  루틴은 download_images  에서 긁어 온다
   3. make_thumbnail
      - que 에 한번에 url list를 저장한다.
      - 4개의 download image thread를 만든다.
   4. Queue 정리
      1. dl_que 에 다운로드 경로, que 에 다운받은 파일의 이름이 있다.
      2. download_image는 dl_que 에서 경로를 get()하여 다운받는다
      3. 다운이 완료 되면 que 에 다운 받은 파일이름을 저장한다.
      4. resize 는 que 에 있는 파일을 resize  한다.
      5. resize는 que 작업 완료를 나타내는 poison pill(None)값으로 쓰레드가 종료된다.
      6. 그럼 누가 언제 poison pill(None)을 que 에 저장해야 할까.?
      7. 만약 download_image의 쓰레드 중이 dl_que가 empty 된 것을 확인하고 더 이상 작업이 없다 생각해서
         None 을 que에 넣었을 경우.
         - 다운로드 실행 중인 download_image 의 다른 쓰레드 결과 파일 값이 que 에 저장 되지 못한다.
      8. 그래서 dl_que 의 작업이 완료 되기까지 기다린 다음 (que 에 파일목록이 다 완성된 시점) 마지막에 que 에 None 값을 저장한다.
         
